{
  "appName": "History",
  "ConnectionStrings": {
    "DefaultConnection": "Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=geeksbank;",
    "IdentityServerConnection": "Server=dev-geeksbank.clzkbfnes807.us-east-2.rds.amazonaws.com;Port=3306;Database=identity-server-geeksbank;User Id=geeksbank;Password=geeksbank;SSL Mode=None"
  },
  "AESKey": "geeksbank2021",
  "Authentication": {
    "UrlAuthenticationService": "http://localhost:50000/"
  },
  "Redis": {
    "ConnectionString": "127.0.0.1,abortConnect=False,syncTimeout=20000,ConnectTimeout=20000,DefaultDatabase=1",
    "CacheExpirationMinutes": "360",
    "ServerPriority": "3"
  },
  "SecurityTokenSettings": {
    "RequireSignedTokens": true,
    "ValidateAudience": false,
    "ValidateIssuer": false,
    "ValidateLifetime": true,
    "ValidateIssuerSigningKey": true,
    "ValidIssuer": "http://localhost:50000",
    "ValidAudiences": "http://localhost:50000/resources"
  },
  "Logging": {
    "ApplicationInsights": {
      "LogLevel": {
        "Default": "Warning",
        "Microsoft": "Error"
      }
    },
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "AllowedHosts": "*",
  "Serilog": {
    "Using": [
      "Serilog.Sinks.Debug"
    ],
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        "GeeksBank.Core": "Debug",
        "Microsoft.AspNetCore.Routing": "Warning",
        "Microsoft.AspNetCore.Hosting.Diagnostics": "Warning",
        "Microsoft.EntityFrameworkCore.Infrastructure": "Warning"
      }
    },
    "WriteTo": [
      {
        "Name": "Async",
        "Args": {
          "configure": [
            {
              "Name": "Console",
              "Args": {
                "theme": "Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme::Code, Serilog.Sinks.Console",
                "outputTemplate": "[{Application}] [{Timestamp:HH:mm:ss} {Level:u3}] {Message:lj} <s:{SourceContext}>{NewLine}{Exception}"
              }
            },
            {
              "Name": "File",
              "Args": {
                "path": "Log\\log-.txt",
                "rollingInterval": "Day",
                "retainedFileCountLimit": 31,
                "outputTemplate": "[{Application}] [{Timestamp:HH:mm:ss} {Level:u3}] {Message:lj} <s:{SourceContext}>{NewLine}{Exception}"
              }
            },
            {
              "Name": "ApplicationInsights",
              "Args": {
                "restrictedToMinimumLevel": "Information",
                "telemetryConverter": "Serilog.Sinks.ApplicationInsights.Sinks.ApplicationInsights.TelemetryConverters.TraceTelemetryConverter, Serilog.Sinks.ApplicationInsights"
              }
            },
            {
              "Name": "Elasticsearch",
              "Args": {
                "nodeUris": "http://localhost:9200;http://remotehost:9200/",
                "indexFormat": "custom-index-{0:yyyy.MM}",
                "templateName": "myCustomTemplate"
              }
            }
          ]
        }
      }
    ]
  },
  "Kestrel": {
    "Limits": {
      "MaxConcurrentConnections": 2000,
      "MaxConcurrentUpgradedConnections": 2000,
      "MaxRequestBodySize": 10240,
      "MaxRequestHeaderCount": 500
    },
    "EndPoints": {
      "Http": {
        "Url": "http://*:5000"
      }
    }
  },
  "DatabaseSettings": {
    "ConnectionString": "mongodb+srv://dbgeeksbank:M0vet2o2o@cluster0.65ju6.mongodb.net/geeksbank-core?retryWrites=true&w=majority",
    "DatabaseName": "geeksbank-core",
    "DatabaseCatalog": "geeksbank-catalog",
    "CollectionPetsName": "pets",
    "CollectionPlan": "Plans",
    "CollectionAddressName": "address",
    "CollectionTicket": "tickets"
  },
  "kafka": {
    "partitions": 10,
    "brokerUrl": "localhost:29092",
    "producerConfig": {
      "socket.blocking.max.ms": 1,
      "queue.buffering.max.ms": 1,
      "socket.nagle.disable": true,
      "LingerMs": 1
    },
    "consumerConfig": {
      "socket.blocking.max.ms": 1,
      "fetch.error.backoff.ms": 1,
      "statistics.interval.ms": 500000,
      "socket.nagle.disable": true,
      "SessionTimeoutMs": 30000,
      "MaxPollIntervalMs": 400000
    },
    "topics": {
      "user_integrations": "user_integrations",
      "pet_intergations": "pet_intergations",
      "ticket_intergations": "ticket_intergations"
    },
    "groups": {
      "user_integrations": "user_integrations_group",
      "pet_intergations": "pet_intergations_group",
      "ticket_intergations": "ticket_intergations_group"
    }
  }
}